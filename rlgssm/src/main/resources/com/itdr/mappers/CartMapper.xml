<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itdr.mappers.CartMapper">
  <resultMap id="BaseResultMap" type="com.itdr.pojo.Cart">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="checked" jdbcType="INTEGER" property="checked" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, product_id, quantity, checked, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from neuedu_cart
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--根据ID删除记录-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from neuedu_cart
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!--在购物车里新增一条商品数据-->
  <insert id="insert" parameterType="com.itdr.pojo.Cart">
    insert into neuedu_cart (id, user_id, product_id, 
      quantity, checked, create_time, 
      update_time)
    values (null, #{userId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER},
      #{quantity,jdbcType=INTEGER}, 1, now(), now())
  </insert>

  <insert id="insertSelective" parameterType="com.itdr.pojo.Cart">
    insert into neuedu_cart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="checked != null">
        checked,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="checked != null">
        #{checked,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <!--根据ID和userId动态更新购物车里的一条商品数据-->
  <update id="updateByPrimaryKeySelective" parameterType="com.itdr.pojo.Cart">
    update neuedu_cart
    <set>
      <if test="userId != null and id != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="checked != null">
        checked = #{checked,jdbcType=INTEGER},
      </if>
        update_time = now(),
    </set>
    <where>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER}
      </if>
      <if test="userId != null">
        and user_id = #{userId}
      </if>
    </where>
  </update>

  <update id="updateByPrimaryKey" parameterType="com.itdr.pojo.Cart">
    update neuedu_cart
    set user_id = #{userId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      checked = #{checked,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--根据用户ID和商品ID查询-->
  <select id="selectByUserIdAndProductId" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from neuedu_cart
    where user_id = #{userId} and product_id = #{productId}
  </select>

  <!--根据用户ID查询-->
  <select id="selectByUserID" parameterType="integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from neuedu_cart
    where user_id = #{userId}
  </select>

  <!--查询userID的选中记录-->
  <select id="selectCheck" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from neuedu_cart
    where user_id = #{userId} and checked = #{checkedCode}
  </select>

  <!--根据userId和productIdList删除多条记录-->
  <delete id="deleteByUserIdAndProductIdList" parameterType="map">
    delete from neuedu_cart
    <where>
      <if test="productIdList != null">
        product_id in
        <foreach collection="productIdList" item="productId" open="(" separator="," close=")">
          #{productId}
        </foreach>
      </if>
      and user_id = #{userId}
    </where>
  </delete>
  <delete id="deleteList" parameterType="map">
    delete from neuedu_cart
    <where>
      <if test="productIDs != null">
        product_id in
        <foreach collection="productIDs" item="productId" open="(" separator="," close=")">
          #{productId}
        </foreach>
      </if>
      and user_id = #{userId}
    </where>
  </delete>
</mapper>